const TelegramBot = require("node-telegram-bot-api");
const Task = require("../models/task.model.js");
require("dotenv").config();

// üìå –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ `.env`
const BOT_TOKEN = process.env.BOT_TOKEN;
const bot = new TelegramBot(BOT_TOKEN, { polling: true });

// üìå –û–±—ä–µ–∫—Ç –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const users = {};

// üìå –ö–æ–º–∞–Ω–¥–∞ `/start` - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;
    users[chatId] = chatId; // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    bot.sendMessage(chatId, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫–∞. –Ø –±—É–¥—É –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å —Ç–µ–±–µ –æ –∑–∞–¥–∞—á–∞—Ö —Å –¥–µ–¥–ª–∞–π–Ω–æ–º.");
});

// üìå –ö–æ–º–∞–Ω–¥–∞ `/tasks` - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á
bot.onText(/\/tasks/, async (msg) => {
    const chatId = msg.chat.id;
    const tasks = await Task.find(); // –ó–∞–¥–∞—á–∏ –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–∞ (–Ω—É–∂–Ω–æ –ø—Ä–∏–≤—è–∑–∞—Ç—å –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é)

    if (tasks.length === 0) {
        bot.sendMessage(chatId, "–£ —Ç–µ–±—è –Ω–µ—Ç –∑–∞–¥–∞—á.");
        return;
    }

    let taskList = tasks.map(task => `üìå ${task.title} - –¥–µ–¥–ª–∞–π–Ω: ${new Date(task.deadline).toLocaleString()}`).join("\n");
    bot.sendMessage(chatId, taskList);
});

// üìå –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
const sendTaskReminders = async () => {
    const now = new Date();
    const tasks = await Task.find({ deadline: { $lte: now } });

    for (const task of tasks) {
        for (const chatId in users) {
            bot.sendMessage(chatId, `‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ! –ó–∞–¥–∞—á–∞: ${task.title} —É–∂–µ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–∞!`);
        }
    }
};

// üìå –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –¥–µ–¥–ª–∞–π–Ω–æ–≤ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
setInterval(sendTaskReminders, 60 * 1000);

module.exports = bot;
